local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local localPlayer = Players.LocalPlayer

-- UI Setup
local ScreenGui = Instance.new("ScreenGui", localPlayer.PlayerGui)
ScreenGui.Name = "FlingGui"

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 300, 0, 150)
Frame.Position = UDim2.new(0.5, -150, 0.5, -75)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Selectable = true
Frame.Visible = true

local TextBox = Instance.new("TextBox", Frame)
TextBox.Size = UDim2.new(1, -20, 0, 30)
TextBox.Position = UDim2.new(0, 10, 0, 10)
TextBox.PlaceholderText = "Type player name..."
TextBox.TextColor3 = Color3.new(1,1,1)
TextBox.BackgroundColor3 = Color3.fromRGB(50,50,50)
TextBox.ClearTextOnFocus = false
TextBox.Text = ""

local SuggestionList = Instance.new("ScrollingFrame", Frame)
SuggestionList.Size = UDim2.new(1, -20, 0, 60)
SuggestionList.Position = UDim2.new(0, 10, 0, 45)
SuggestionList.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
SuggestionList.BorderSizePixel = 0
SuggestionList.ScrollBarThickness = 4
SuggestionList.Visible = false
SuggestionList.AutomaticCanvasSize = Enum.AutomaticSize.Y

local UIListLayout = Instance.new("UIListLayout", SuggestionList)
UIListLayout.Padding = UDim.new(0, 4)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

local FlingButton = Instance.new("TextButton", Frame)
FlingButton.Size = UDim2.new(1, -20, 0, 30)
FlingButton.Position = UDim2.new(0, 10, 1, -40)
FlingButton.Text = "Start Fling"
FlingButton.BackgroundColor3 = Color3.fromRGB(70, 130, 230)
FlingButton.TextColor3 = Color3.new(1,1,1)
FlingButton.Font = Enum.Font.SourceSansBold
FlingButton.TextSize = 22

local StopButton = Instance.new("TextButton", Frame)
StopButton.Size = UDim2.new(1, -20, 0, 30)
StopButton.Position = UDim2.new(0, 10, 1, -80)
StopButton.Text = "Stop Fling"
StopButton.BackgroundColor3 = Color3.fromRGB(230, 70, 70)
StopButton.TextColor3 = Color3.new(1,1,1)
StopButton.Font = Enum.Font.SourceSansBold
StopButton.TextSize = 22

-- Helper function: Get players matching partial name
local function getMatchingPlayers(partial)
    partial = partial:lower()
    local matches = {}
    for _, plr in pairs(Players:GetPlayers()) do
        if plr.Name:lower():find(partial) then
            table.insert(matches, plr)
        end
    end
    return matches
end

-- Update suggestions based on TextBox input
local function updateSuggestions()
    local input = TextBox.Text
    -- Clear old suggestions
    for _, child in pairs(SuggestionList:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end

    if input == "" then
        SuggestionList.Visible = false
        return
    end

    local matches = getMatchingPlayers(input)
    if #matches == 0 then
        SuggestionList.Visible = false
        return
    end

    SuggestionList.Visible = true
    SuggestionList.CanvasSize = UDim2.new(0, 0, 0, (#matches * 30 + (#matches-1)*4))

    for i, plr in pairs(matches) do
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(1, 0, 0, 30)
        btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.Font = Enum.Font.SourceSans
        btn.TextSize = 20
        btn.Text = plr.Name
        btn.LayoutOrder = i
        btn.Parent = SuggestionList

        btn.MouseButton1Click:Connect(function()
            TextBox.Text = plr.Name
            SuggestionList.Visible = false
        end)
    end
end

TextBox:GetPropertyChangedSignal("Text"):Connect(updateSuggestions)

-- Dragging code for the Frame
local dragging = false
local dragInput, dragStart, startPos

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Fling code
local flingConnection = nil
local hiddenfling = false
local originalCFrame = nil

local function getRoot(character)
    return character and (character:FindFirstChild("HumanoidRootPart") or character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso"))
end

local function startFling(targetPlayer)
    if not targetPlayer then return end
    local character = localPlayer.Character
    local hrp = getRoot(character)
    local targetCharacter = targetPlayer.Character
    local targetHRP = getRoot(targetCharacter)

    if not (character and hrp and targetCharacter and targetHRP) then
        warn("Missing character parts.")
        return
    end

    -- Save original position before starting fling
    originalCFrame = hrp.CFrame

    hiddenfling = true

    flingConnection = RunService.Heartbeat:Connect(function()
        if not hiddenfling then return end
        if not hrp or not targetHRP then return end

        -- Teleport repeatedly
        hrp.CFrame = targetHRP.CFrame * CFrame.new(0, 3, 0)

        -- Apply fling velocity
        local originalVelocity = hrp.Velocity
        hrp.Velocity = originalVelocity * 10000 + Vector3.new(0, 10000, 0)

        RunService.RenderStepped:Wait()

        if hrp then
            hrp.Velocity = originalVelocity
        end

        RunService.Stepped:Wait()

        if hrp then
            hrp.Velocity = originalVelocity + Vector3.new(0, 0.1, 0)
        end
    end)
end

local function stopFling()
    hiddenfling = false
    if flingConnection then
        flingConnection:Disconnect()
        flingConnection = nil
    end
    -- Teleport back to original position if saved
    local character = localPlayer.Character
    local hrp = getRoot(character)
    if hrp and originalCFrame then
        hrp.CFrame = originalCFrame
    end
    originalCFrame = nil
end

-- Buttons functionality
FlingButton.MouseButton1Click:Connect(function()
    local name = TextBox.Text
    local targetPlayer = nil

    for _, plr in pairs(Players:GetPlayers()) do
        if plr.Name:lower() == name:lower() then
            targetPlayer = plr
            break
        end
    end

    if not targetPlayer then
        warn("Player not found: " .. name)
        return
    end

    startFling(targetPlayer)
end)

StopButton.MouseButton1Click:Connect(stopFling)
